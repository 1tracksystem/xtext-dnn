/*
 * generated by Xtext 2.11.0-SNAPSHOT
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Model");
		private final Assignment cNetworkAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNetworkNetworkParserRuleCall_0 = (RuleCall)cNetworkAssignment.eContents().get(0);
		
		//Model:
		//	network=Network;
		@Override public ParserRule getRule() { return rule; }
		
		//network=Network
		public Assignment getNetworkAssignment() { return cNetworkAssignment; }
		
		//Network
		public RuleCall getNetworkNetworkParserRuleCall_0() { return cNetworkNetworkParserRuleCall_0; }
	}
	public class NetworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Network");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cNetworkKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cEpochsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cASSIGNTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cEpochsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cEpochsINTEGERTerminalRuleCall_1_2_0 = (RuleCall)cEpochsAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cSeedKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cASSIGNTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cSeedAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cSeedZINTEGERTerminalRuleCall_2_2_0 = (RuleCall)cSeedAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cUpdaterKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cREFERENCETerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Assignment cUpdaterTypeAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cUpdaterTypeUpdaterTypeEnumRuleCall_3_2_0 = (RuleCall)cUpdaterTypeAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cLearningRateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cASSIGNTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cLearningRateAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cLearningRateVariableAssignmentParserRuleCall_4_2_0 = (RuleCall)cLearningRateAssignment_4_2.eContents().get(0);
		private final Assignment cLayersAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cLayersLayerParserRuleCall_4_3_0 = (RuleCall)cLayersAssignment_4_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		
		//Network:
		//	'network' name=ID '{' &
		//	'epochs' ASSIGN epochs=INTEGER & ('seed' ASSIGN seed=ZINTEGER)? &
		//	'updater' REFERENCE updaterType=UpdaterType &
		//	'learningRate' ASSIGN learningRate=VariableAssignment
		//	layers+=Layer*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'network' name=ID '{' & 'epochs' ASSIGN epochs=INTEGER & ('seed' ASSIGN seed=ZINTEGER)? & 'updater' REFERENCE
		//updaterType=UpdaterType & 'learningRate' ASSIGN learningRate=VariableAssignment layers+=Layer* '}'
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'network' name=ID '{'
		public Group getGroup_0() { return cGroup_0; }
		
		//'network'
		public Keyword getNetworkKeyword_0_0() { return cNetworkKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0_2() { return cLeftCurlyBracketKeyword_0_2; }
		
		//'epochs' ASSIGN epochs=INTEGER
		public Group getGroup_1() { return cGroup_1; }
		
		//'epochs'
		public Keyword getEpochsKeyword_1_0() { return cEpochsKeyword_1_0; }
		
		//ASSIGN
		public RuleCall getASSIGNTerminalRuleCall_1_1() { return cASSIGNTerminalRuleCall_1_1; }
		
		//epochs=INTEGER
		public Assignment getEpochsAssignment_1_2() { return cEpochsAssignment_1_2; }
		
		//INTEGER
		public RuleCall getEpochsINTEGERTerminalRuleCall_1_2_0() { return cEpochsINTEGERTerminalRuleCall_1_2_0; }
		
		//('seed' ASSIGN seed=ZINTEGER)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'seed'
		public Keyword getSeedKeyword_2_0() { return cSeedKeyword_2_0; }
		
		//ASSIGN
		public RuleCall getASSIGNTerminalRuleCall_2_1() { return cASSIGNTerminalRuleCall_2_1; }
		
		//seed=ZINTEGER
		public Assignment getSeedAssignment_2_2() { return cSeedAssignment_2_2; }
		
		//ZINTEGER
		public RuleCall getSeedZINTEGERTerminalRuleCall_2_2_0() { return cSeedZINTEGERTerminalRuleCall_2_2_0; }
		
		//'updater' REFERENCE updaterType=UpdaterType
		public Group getGroup_3() { return cGroup_3; }
		
		//'updater'
		public Keyword getUpdaterKeyword_3_0() { return cUpdaterKeyword_3_0; }
		
		//REFERENCE
		public RuleCall getREFERENCETerminalRuleCall_3_1() { return cREFERENCETerminalRuleCall_3_1; }
		
		//updaterType=UpdaterType
		public Assignment getUpdaterTypeAssignment_3_2() { return cUpdaterTypeAssignment_3_2; }
		
		//UpdaterType
		public RuleCall getUpdaterTypeUpdaterTypeEnumRuleCall_3_2_0() { return cUpdaterTypeUpdaterTypeEnumRuleCall_3_2_0; }
		
		//'learningRate' ASSIGN learningRate=VariableAssignment layers+=Layer* '}'
		public Group getGroup_4() { return cGroup_4; }
		
		//'learningRate'
		public Keyword getLearningRateKeyword_4_0() { return cLearningRateKeyword_4_0; }
		
		//ASSIGN
		public RuleCall getASSIGNTerminalRuleCall_4_1() { return cASSIGNTerminalRuleCall_4_1; }
		
		//learningRate=VariableAssignment
		public Assignment getLearningRateAssignment_4_2() { return cLearningRateAssignment_4_2; }
		
		//VariableAssignment
		public RuleCall getLearningRateVariableAssignmentParserRuleCall_4_2_0() { return cLearningRateVariableAssignmentParserRuleCall_4_2_0; }
		
		//layers+=Layer*
		public Assignment getLayersAssignment_4_3() { return cLayersAssignment_4_3; }
		
		//Layer
		public RuleCall getLayersLayerParserRuleCall_4_3_0() { return cLayersLayerParserRuleCall_4_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
	}
	public class LayerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Layer");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cLayerKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cLayerDeclAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cLayerDeclLayerDeclarationParserRuleCall_0_1_0 = (RuleCall)cLayerDeclAssignment_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Keyword cTypeKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final RuleCall cREFERENCETerminalRuleCall_0_4 = (RuleCall)cGroup_0.eContents().get(4);
		private final Assignment cLayerTypeAssignment_0_5 = (Assignment)cGroup_0.eContents().get(5);
		private final RuleCall cLayerTypeLayerTypeEnumRuleCall_0_5_0 = (RuleCall)cLayerTypeAssignment_0_5.eContents().get(0);
		private final Group cGroup_0_6 = (Group)cGroup_0.eContents().get(6);
		private final Keyword cActivationKeyword_0_6_0 = (Keyword)cGroup_0_6.eContents().get(0);
		private final RuleCall cREFERENCETerminalRuleCall_0_6_1 = (RuleCall)cGroup_0_6.eContents().get(1);
		private final Assignment cActivTypeAssignment_0_6_2 = (Assignment)cGroup_0_6.eContents().get(2);
		private final RuleCall cActivTypeActivationFunctionTypeEnumRuleCall_0_6_2_0 = (RuleCall)cActivTypeAssignment_0_6_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cWeightsInitKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cREFERENCETerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cWeightInitAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cWeightInitWeightInitTypeEnumRuleCall_1_2_0 = (RuleCall)cWeightInitAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cGroup_2.eContents().get(0);
		private final Keyword cBiasInitKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final RuleCall cASSIGNTerminalRuleCall_2_0_1 = (RuleCall)cGroup_2_0.eContents().get(1);
		private final Assignment cBiasInitAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cBiasInitREALTerminalRuleCall_2_0_2_0 = (RuleCall)cBiasInitAssignment_2_0_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		
		//Layer:
		//	'layer' layerDecl=LayerDeclaration '{'
		//	'type' REFERENCE layerType=LayerType ('activation' REFERENCE activType=ActivationFunctionType)? & ('weightsInit'
		//	REFERENCE weightInit=WeightInitType)? & ('biasInit' ASSIGN biasInit=REAL)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'layer' layerDecl=LayerDeclaration '{' 'type' REFERENCE layerType=LayerType ('activation' REFERENCE
		//activType=ActivationFunctionType)? & ('weightsInit' REFERENCE weightInit=WeightInitType)? & ('biasInit' ASSIGN
		//biasInit=REAL)? '}'
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'layer' layerDecl=LayerDeclaration '{' 'type' REFERENCE layerType=LayerType ('activation' REFERENCE
		//activType=ActivationFunctionType)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'layer'
		public Keyword getLayerKeyword_0_0() { return cLayerKeyword_0_0; }
		
		//layerDecl=LayerDeclaration
		public Assignment getLayerDeclAssignment_0_1() { return cLayerDeclAssignment_0_1; }
		
		//LayerDeclaration
		public RuleCall getLayerDeclLayerDeclarationParserRuleCall_0_1_0() { return cLayerDeclLayerDeclarationParserRuleCall_0_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0_2() { return cLeftCurlyBracketKeyword_0_2; }
		
		//'type'
		public Keyword getTypeKeyword_0_3() { return cTypeKeyword_0_3; }
		
		//REFERENCE
		public RuleCall getREFERENCETerminalRuleCall_0_4() { return cREFERENCETerminalRuleCall_0_4; }
		
		//layerType=LayerType
		public Assignment getLayerTypeAssignment_0_5() { return cLayerTypeAssignment_0_5; }
		
		//LayerType
		public RuleCall getLayerTypeLayerTypeEnumRuleCall_0_5_0() { return cLayerTypeLayerTypeEnumRuleCall_0_5_0; }
		
		//('activation' REFERENCE activType=ActivationFunctionType)?
		public Group getGroup_0_6() { return cGroup_0_6; }
		
		//'activation'
		public Keyword getActivationKeyword_0_6_0() { return cActivationKeyword_0_6_0; }
		
		//REFERENCE
		public RuleCall getREFERENCETerminalRuleCall_0_6_1() { return cREFERENCETerminalRuleCall_0_6_1; }
		
		//activType=ActivationFunctionType
		public Assignment getActivTypeAssignment_0_6_2() { return cActivTypeAssignment_0_6_2; }
		
		//ActivationFunctionType
		public RuleCall getActivTypeActivationFunctionTypeEnumRuleCall_0_6_2_0() { return cActivTypeActivationFunctionTypeEnumRuleCall_0_6_2_0; }
		
		//('weightsInit' REFERENCE weightInit=WeightInitType)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'weightsInit'
		public Keyword getWeightsInitKeyword_1_0() { return cWeightsInitKeyword_1_0; }
		
		//REFERENCE
		public RuleCall getREFERENCETerminalRuleCall_1_1() { return cREFERENCETerminalRuleCall_1_1; }
		
		//weightInit=WeightInitType
		public Assignment getWeightInitAssignment_1_2() { return cWeightInitAssignment_1_2; }
		
		//WeightInitType
		public RuleCall getWeightInitWeightInitTypeEnumRuleCall_1_2_0() { return cWeightInitWeightInitTypeEnumRuleCall_1_2_0; }
		
		//('biasInit' ASSIGN biasInit=REAL)? '}'
		public Group getGroup_2() { return cGroup_2; }
		
		//('biasInit' ASSIGN biasInit=REAL)?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'biasInit'
		public Keyword getBiasInitKeyword_2_0_0() { return cBiasInitKeyword_2_0_0; }
		
		//ASSIGN
		public RuleCall getASSIGNTerminalRuleCall_2_0_1() { return cASSIGNTerminalRuleCall_2_0_1; }
		
		//biasInit=REAL
		public Assignment getBiasInitAssignment_2_0_2() { return cBiasInitAssignment_2_0_2; }
		
		//REAL
		public RuleCall getBiasInitREALTerminalRuleCall_2_0_2_0() { return cBiasInitREALTerminalRuleCall_2_0_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_1() { return cRightCurlyBracketKeyword_2_1; }
	}
	public class LayerDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LayerDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cLayerTupleAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cLayerTupleLayerTupleParserRuleCall_0_0 = (RuleCall)cLayerTupleAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cLayerTupleAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLayerTupleLayerTupleParserRuleCall_1_1_0 = (RuleCall)cLayerTupleAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cLayerTupleAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cLayerTupleLayerTupleParserRuleCall_1_2_1_0 = (RuleCall)cLayerTupleAssignment_1_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cLayerMultiplierAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cLayerMultiplierINTEGERTerminalRuleCall_2_1_0 = (RuleCall)cLayerMultiplierAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cLayerTupleAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final RuleCall cLayerTupleLayerTupleParserRuleCall_2_4_0 = (RuleCall)cLayerTupleAssignment_2_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		
		//LayerDeclaration:
		//	layerTuple+=LayerTuple |
		//	'[' layerTuple+=LayerTuple (',' layerTuple+=LayerTuple)* ']' |
		//	'{' layerMultiplier=INTEGER '}' '[' layerTuple+=LayerTuple ']';
		@Override public ParserRule getRule() { return rule; }
		
		//layerTuple+=LayerTuple | '[' layerTuple+=LayerTuple (',' layerTuple+=LayerTuple)* ']' | '{' layerMultiplier=INTEGER '}'
		//'[' layerTuple+=LayerTuple ']'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//layerTuple+=LayerTuple
		public Assignment getLayerTupleAssignment_0() { return cLayerTupleAssignment_0; }
		
		//LayerTuple
		public RuleCall getLayerTupleLayerTupleParserRuleCall_0_0() { return cLayerTupleLayerTupleParserRuleCall_0_0; }
		
		//'[' layerTuple+=LayerTuple (',' layerTuple+=LayerTuple)* ']'
		public Group getGroup_1() { return cGroup_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }
		
		//layerTuple+=LayerTuple
		public Assignment getLayerTupleAssignment_1_1() { return cLayerTupleAssignment_1_1; }
		
		//LayerTuple
		public RuleCall getLayerTupleLayerTupleParserRuleCall_1_1_0() { return cLayerTupleLayerTupleParserRuleCall_1_1_0; }
		
		//(',' layerTuple+=LayerTuple)*
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//','
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }
		
		//layerTuple+=LayerTuple
		public Assignment getLayerTupleAssignment_1_2_1() { return cLayerTupleAssignment_1_2_1; }
		
		//LayerTuple
		public RuleCall getLayerTupleLayerTupleParserRuleCall_1_2_1_0() { return cLayerTupleLayerTupleParserRuleCall_1_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }
		
		//'{' layerMultiplier=INTEGER '}' '[' layerTuple+=LayerTuple ']'
		public Group getGroup_2() { return cGroup_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }
		
		//layerMultiplier=INTEGER
		public Assignment getLayerMultiplierAssignment_2_1() { return cLayerMultiplierAssignment_2_1; }
		
		//INTEGER
		public RuleCall getLayerMultiplierINTEGERTerminalRuleCall_2_1_0() { return cLayerMultiplierINTEGERTerminalRuleCall_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_3() { return cLeftSquareBracketKeyword_2_3; }
		
		//layerTuple+=LayerTuple
		public Assignment getLayerTupleAssignment_2_4() { return cLayerTupleAssignment_2_4; }
		
		//LayerTuple
		public RuleCall getLayerTupleLayerTupleParserRuleCall_2_4_0() { return cLayerTupleLayerTupleParserRuleCall_2_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_5() { return cRightSquareBracketKeyword_2_5; }
	}
	public class LayerTupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LayerTuple");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cRefKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Keyword cColonKeyword_0_1_1 = (Keyword)cGroup_0_1.eContents().get(1);
		private final Assignment cRefAssignment_0_1_2 = (Assignment)cGroup_0_1.eContents().get(2);
		private final RuleCall cRefIDTerminalRuleCall_0_1_2_0 = (RuleCall)cRefAssignment_0_1_2.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cInKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Keyword cColonKeyword_0_2_1 = (Keyword)cGroup_0_2.eContents().get(1);
		private final Assignment cInAssignment_0_2_2 = (Assignment)cGroup_0_2.eContents().get(2);
		private final RuleCall cInLayerRefParserRuleCall_0_2_2_0 = (RuleCall)cInAssignment_0_2_2.eContents().get(0);
		private final Keyword cOutKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Keyword cColonKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Assignment cOutAssignment_0_5 = (Assignment)cGroup_0.eContents().get(5);
		private final RuleCall cOutLayerRefParserRuleCall_0_5_0 = (RuleCall)cOutAssignment_0_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cInAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cInLayerRefParserRuleCall_1_1_0 = (RuleCall)cInAssignment_1_1.eContents().get(0);
		private final Keyword cColonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cOutAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cOutLayerRefParserRuleCall_1_3_0 = (RuleCall)cOutAssignment_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOutAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOutLayerRefParserRuleCall_2_1_0 = (RuleCall)cOutAssignment_2_1.eContents().get(0);
		
		//LayerTuple:
		//	'(' ('ref' ':' ref=ID)? ('in' ':' in=LayerRef)? 'out' ':' out=LayerRef ')' |
		//	'(' in=LayerRef? ':' out=LayerRef ')' |
		//	':' out=LayerRef;
		@Override public ParserRule getRule() { return rule; }
		
		//'(' ('ref' ':' ref=ID)? ('in' ':' in=LayerRef)? 'out' ':' out=LayerRef ')' | '(' in=LayerRef? ':' out=LayerRef ')' | ':'
		//out=LayerRef
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'(' ('ref' ':' ref=ID)? ('in' ':' in=LayerRef)? 'out' ':' out=LayerRef ')'
		public Group getGroup_0() { return cGroup_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_0() { return cLeftParenthesisKeyword_0_0; }
		
		//('ref' ':' ref=ID)?
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//'ref'
		public Keyword getRefKeyword_0_1_0() { return cRefKeyword_0_1_0; }
		
		//':'
		public Keyword getColonKeyword_0_1_1() { return cColonKeyword_0_1_1; }
		
		//ref=ID
		public Assignment getRefAssignment_0_1_2() { return cRefAssignment_0_1_2; }
		
		//ID
		public RuleCall getRefIDTerminalRuleCall_0_1_2_0() { return cRefIDTerminalRuleCall_0_1_2_0; }
		
		//('in' ':' in=LayerRef)?
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//'in'
		public Keyword getInKeyword_0_2_0() { return cInKeyword_0_2_0; }
		
		//':'
		public Keyword getColonKeyword_0_2_1() { return cColonKeyword_0_2_1; }
		
		//in=LayerRef
		public Assignment getInAssignment_0_2_2() { return cInAssignment_0_2_2; }
		
		//LayerRef
		public RuleCall getInLayerRefParserRuleCall_0_2_2_0() { return cInLayerRefParserRuleCall_0_2_2_0; }
		
		//'out'
		public Keyword getOutKeyword_0_3() { return cOutKeyword_0_3; }
		
		//':'
		public Keyword getColonKeyword_0_4() { return cColonKeyword_0_4; }
		
		//out=LayerRef
		public Assignment getOutAssignment_0_5() { return cOutAssignment_0_5; }
		
		//LayerRef
		public RuleCall getOutLayerRefParserRuleCall_0_5_0() { return cOutLayerRefParserRuleCall_0_5_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_6() { return cRightParenthesisKeyword_0_6; }
		
		//'(' in=LayerRef? ':' out=LayerRef ')'
		public Group getGroup_1() { return cGroup_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//in=LayerRef?
		public Assignment getInAssignment_1_1() { return cInAssignment_1_1; }
		
		//LayerRef
		public RuleCall getInLayerRefParserRuleCall_1_1_0() { return cInLayerRefParserRuleCall_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_1_2() { return cColonKeyword_1_2; }
		
		//out=LayerRef
		public Assignment getOutAssignment_1_3() { return cOutAssignment_1_3; }
		
		//LayerRef
		public RuleCall getOutLayerRefParserRuleCall_1_3_0() { return cOutLayerRefParserRuleCall_1_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_4() { return cRightParenthesisKeyword_1_4; }
		
		//':' out=LayerRef
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//out=LayerRef
		public Assignment getOutAssignment_2_1() { return cOutAssignment_2_1; }
		
		//LayerRef
		public RuleCall getOutLayerRefParserRuleCall_2_1_0() { return cOutLayerRefParserRuleCall_2_1_0; }
	}
	public class LayerRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LayerRef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cValueINTEGERTerminalRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLessThanSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRefAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRefIDTerminalRuleCall_1_1_0 = (RuleCall)cRefAssignment_1_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//LayerRef:
		//	value=INTEGER | '<' ref=ID '>';
		@Override public ParserRule getRule() { return rule; }
		
		//value=INTEGER | '<' ref=ID '>'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//value=INTEGER
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }
		
		//INTEGER
		public RuleCall getValueINTEGERTerminalRuleCall_0_0() { return cValueINTEGERTerminalRuleCall_0_0; }
		
		//'<' ref=ID '>'
		public Group getGroup_1() { return cGroup_1; }
		
		//'<'
		public Keyword getLessThanSignKeyword_1_0() { return cLessThanSignKeyword_1_0; }
		
		//ref=ID
		public Assignment getRefAssignment_1_1() { return cRefAssignment_1_1; }
		
		//ID
		public RuleCall getRefIDTerminalRuleCall_1_1_0() { return cRefIDTerminalRuleCall_1_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1_2() { return cGreaterThanSignKeyword_1_2; }
	}
	public class VariableAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.VariableAssignment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cValueINTEGERTerminalRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final RuleCall cExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFunctionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//VariableAssignment:
		//	value=INTEGER | Expression | Function;
		@Override public ParserRule getRule() { return rule; }
		
		//value=INTEGER | Expression | Function
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//value=INTEGER
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }
		
		//INTEGER
		public RuleCall getValueINTEGERTerminalRuleCall_0_0() { return cValueINTEGERTerminalRuleCall_0_0; }
		
		//Expression
		public RuleCall getExpressionParserRuleCall_1() { return cExpressionParserRuleCall_1; }
		
		//Function
		public RuleCall getFunctionParserRuleCall_2() { return cFunctionParserRuleCall_2; }
	}
	public class FunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Function");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cArgsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cArgsDeclaredParameterParserRuleCall_1_1_0 = (RuleCall)cArgsAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cArgsAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cArgsDeclaredParameterParserRuleCall_1_2_1_0 = (RuleCall)cArgsAssignment_1_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final RuleCall cASSIGNTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cExprAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExprExpressionParserRuleCall_3_0 = (RuleCall)cExprAssignment_3.eContents().get(0);
		
		//Function:
		//	name=ID ('(' args+=DeclaredParameter (',' args+=DeclaredParameter)* ')')? ASSIGN expr=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ('(' args+=DeclaredParameter (',' args+=DeclaredParameter)* ')')? ASSIGN expr=Expression
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//('(' args+=DeclaredParameter (',' args+=DeclaredParameter)* ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//args+=DeclaredParameter
		public Assignment getArgsAssignment_1_1() { return cArgsAssignment_1_1; }
		
		//DeclaredParameter
		public RuleCall getArgsDeclaredParameterParserRuleCall_1_1_0() { return cArgsDeclaredParameterParserRuleCall_1_1_0; }
		
		//(',' args+=DeclaredParameter)*
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//','
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }
		
		//args+=DeclaredParameter
		public Assignment getArgsAssignment_1_2_1() { return cArgsAssignment_1_2_1; }
		
		//DeclaredParameter
		public RuleCall getArgsDeclaredParameterParserRuleCall_1_2_1_0() { return cArgsDeclaredParameterParserRuleCall_1_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }
		
		//ASSIGN
		public RuleCall getASSIGNTerminalRuleCall_2() { return cASSIGNTerminalRuleCall_2; }
		
		//expr=Expression
		public Assignment getExprAssignment_3() { return cExprAssignment_3; }
		
		//Expression
		public RuleCall getExprExpressionParserRuleCall_3_0() { return cExprExpressionParserRuleCall_3_0; }
	}
	public class DeclaredParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DeclaredParameter");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//DeclaredParameter:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Expression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTermParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Action cPlusLeftAction_1_0_0_0 = (Action)cGroup_1_0_0.eContents().get(0);
		private final Keyword cPlusSignKeyword_1_0_0_1 = (Keyword)cGroup_1_0_0.eContents().get(1);
		private final Group cGroup_1_0_1 = (Group)cAlternatives_1_0.eContents().get(1);
		private final Action cMinusLeftAction_1_0_1_0 = (Action)cGroup_1_0_1.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1_0_1_1 = (Keyword)cGroup_1_0_1.eContents().get(1);
		private final Assignment cRightAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightTermParserRuleCall_1_1_0 = (RuleCall)cRightAssignment_1_1.eContents().get(0);
		
		//Expression:
		//	Term (({Plus.left=current} '+' | {Minus.left=current} '-') right=Term)*;
		@Override public ParserRule getRule() { return rule; }
		
		//Term (({Plus.left=current} '+' | {Minus.left=current} '-') right=Term)*
		public Group getGroup() { return cGroup; }
		
		//Term
		public RuleCall getTermParserRuleCall_0() { return cTermParserRuleCall_0; }
		
		//(({Plus.left=current} '+' | {Minus.left=current} '-') right=Term)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{Plus.left=current} '+' | {Minus.left=current} '-'
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//{Plus.left=current} '+'
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//{Plus.left=current}
		public Action getPlusLeftAction_1_0_0_0() { return cPlusLeftAction_1_0_0_0; }
		
		//'+'
		public Keyword getPlusSignKeyword_1_0_0_1() { return cPlusSignKeyword_1_0_0_1; }
		
		//{Minus.left=current} '-'
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//{Minus.left=current}
		public Action getMinusLeftAction_1_0_1_0() { return cMinusLeftAction_1_0_1_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_0_1_1() { return cHyphenMinusKeyword_1_0_1_1; }
		
		//right=Term
		public Assignment getRightAssignment_1_1() { return cRightAssignment_1_1; }
		
		//Term
		public RuleCall getRightTermParserRuleCall_1_1_0() { return cRightTermParserRuleCall_1_1_0; }
	}
	public class TermElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Term");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFactorParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Action cMultiplyLeftAction_1_0_0_0 = (Action)cGroup_1_0_0.eContents().get(0);
		private final Keyword cAsteriskKeyword_1_0_0_1 = (Keyword)cGroup_1_0_0.eContents().get(1);
		private final Group cGroup_1_0_1 = (Group)cAlternatives_1_0.eContents().get(1);
		private final Action cDivisionLeftAction_1_0_1_0 = (Action)cGroup_1_0_1.eContents().get(0);
		private final Keyword cSolidusKeyword_1_0_1_1 = (Keyword)cGroup_1_0_1.eContents().get(1);
		private final Assignment cRightAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightFactorParserRuleCall_1_1_0 = (RuleCall)cRightAssignment_1_1.eContents().get(0);
		
		//Term:
		//	Factor (({Multiply.left=current} '*' | {Division.left=current} '/') right=Factor)*;
		@Override public ParserRule getRule() { return rule; }
		
		//Factor (({Multiply.left=current} '*' | {Division.left=current} '/') right=Factor)*
		public Group getGroup() { return cGroup; }
		
		//Factor
		public RuleCall getFactorParserRuleCall_0() { return cFactorParserRuleCall_0; }
		
		//(({Multiply.left=current} '*' | {Division.left=current} '/') right=Factor)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{Multiply.left=current} '*' | {Division.left=current} '/'
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//{Multiply.left=current} '*'
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//{Multiply.left=current}
		public Action getMultiplyLeftAction_1_0_0_0() { return cMultiplyLeftAction_1_0_0_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_1_0_0_1() { return cAsteriskKeyword_1_0_0_1; }
		
		//{Division.left=current} '/'
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//{Division.left=current}
		public Action getDivisionLeftAction_1_0_1_0() { return cDivisionLeftAction_1_0_1_0; }
		
		//'/'
		public Keyword getSolidusKeyword_1_0_1_1() { return cSolidusKeyword_1_0_1_1; }
		
		//right=Factor
		public Assignment getRightAssignment_1_1() { return cRightAssignment_1_1; }
		
		//Factor
		public RuleCall getRightFactorParserRuleCall_1_1_0() { return cRightFactorParserRuleCall_1_1_0; }
	}
	public class FactorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Factor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cNumberAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cNumberREALTerminalRuleCall_0_0 = (RuleCall)cNumberAssignment_0.eContents().get(0);
		private final Assignment cVariableAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cVariableIDTerminalRuleCall_1_0 = (RuleCall)cVariableAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cExpressionAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cExpressionExpressionParserRuleCall_2_1_0 = (RuleCall)cExpressionAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//Factor:
		//	number=REAL | variable=ID | '(' expression=Expression ')';
		@Override public ParserRule getRule() { return rule; }
		
		//number=REAL | variable=ID | '(' expression=Expression ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//number=REAL
		public Assignment getNumberAssignment_0() { return cNumberAssignment_0; }
		
		//REAL
		public RuleCall getNumberREALTerminalRuleCall_0_0() { return cNumberREALTerminalRuleCall_0_0; }
		
		//variable=ID
		public Assignment getVariableAssignment_1() { return cVariableAssignment_1; }
		
		//ID
		public RuleCall getVariableIDTerminalRuleCall_1_0() { return cVariableIDTerminalRuleCall_1_0; }
		
		//'(' expression=Expression ')'
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//expression=Expression
		public Assignment getExpressionAssignment_2_1() { return cExpressionAssignment_2_1; }
		
		//Expression
		public RuleCall getExpressionExpressionParserRuleCall_2_1_0() { return cExpressionExpressionParserRuleCall_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
	}
	
	public class LayerTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LayerType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCONVOLUTIONALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCONVOLUTIONALConvKeyword_0_0 = (Keyword)cCONVOLUTIONALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMAXPOOLEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMAXPOOLMaxPoolKeyword_1_0 = (Keyword)cMAXPOOLEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAVGPOOLEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAVGPOOLAvgPoolKeyword_2_0 = (Keyword)cAVGPOOLEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDENSEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDENSEDenseKeyword_3_0 = (Keyword)cDENSEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSOFTMAXEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSOFTMAXSoftmaxKeyword_4_0 = (Keyword)cSOFTMAXEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum LayerType:
		//	CONVOLUTIONAL='conv' | MAXPOOL='max-pool' | AVGPOOL='avg-pool' | DENSE='dense' | SOFTMAX='softmax';
		public EnumRule getRule() { return rule; }
		
		//CONVOLUTIONAL='conv' | MAXPOOL='max-pool' | AVGPOOL='avg-pool' | DENSE='dense' | SOFTMAX='softmax'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CONVOLUTIONAL='conv'
		public EnumLiteralDeclaration getCONVOLUTIONALEnumLiteralDeclaration_0() { return cCONVOLUTIONALEnumLiteralDeclaration_0; }
		
		//'conv'
		public Keyword getCONVOLUTIONALConvKeyword_0_0() { return cCONVOLUTIONALConvKeyword_0_0; }
		
		//MAXPOOL='max-pool'
		public EnumLiteralDeclaration getMAXPOOLEnumLiteralDeclaration_1() { return cMAXPOOLEnumLiteralDeclaration_1; }
		
		//'max-pool'
		public Keyword getMAXPOOLMaxPoolKeyword_1_0() { return cMAXPOOLMaxPoolKeyword_1_0; }
		
		//AVGPOOL='avg-pool'
		public EnumLiteralDeclaration getAVGPOOLEnumLiteralDeclaration_2() { return cAVGPOOLEnumLiteralDeclaration_2; }
		
		//'avg-pool'
		public Keyword getAVGPOOLAvgPoolKeyword_2_0() { return cAVGPOOLAvgPoolKeyword_2_0; }
		
		//DENSE='dense'
		public EnumLiteralDeclaration getDENSEEnumLiteralDeclaration_3() { return cDENSEEnumLiteralDeclaration_3; }
		
		//'dense'
		public Keyword getDENSEDenseKeyword_3_0() { return cDENSEDenseKeyword_3_0; }
		
		//SOFTMAX='softmax'
		public EnumLiteralDeclaration getSOFTMAXEnumLiteralDeclaration_4() { return cSOFTMAXEnumLiteralDeclaration_4; }
		
		//'softmax'
		public Keyword getSOFTMAXSoftmaxKeyword_4_0() { return cSOFTMAXSoftmaxKeyword_4_0; }
	}
	public class ActivationFunctionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ActivationFunctionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSIGMOIDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSIGMOIDSigmoidKeyword_0_0 = (Keyword)cSIGMOIDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTANHEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTANHTanhKeyword_1_0 = (Keyword)cTANHEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cRELUEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cRELUReluKeyword_2_0 = (Keyword)cRELUEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum ActivationFunctionType:
		//	SIGMOID='sigmoid' | TANH='tanh' | RELU='relu';
		public EnumRule getRule() { return rule; }
		
		//SIGMOID='sigmoid' | TANH='tanh' | RELU='relu'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SIGMOID='sigmoid'
		public EnumLiteralDeclaration getSIGMOIDEnumLiteralDeclaration_0() { return cSIGMOIDEnumLiteralDeclaration_0; }
		
		//'sigmoid'
		public Keyword getSIGMOIDSigmoidKeyword_0_0() { return cSIGMOIDSigmoidKeyword_0_0; }
		
		//TANH='tanh'
		public EnumLiteralDeclaration getTANHEnumLiteralDeclaration_1() { return cTANHEnumLiteralDeclaration_1; }
		
		//'tanh'
		public Keyword getTANHTanhKeyword_1_0() { return cTANHTanhKeyword_1_0; }
		
		//RELU='relu'
		public EnumLiteralDeclaration getRELUEnumLiteralDeclaration_2() { return cRELUEnumLiteralDeclaration_2; }
		
		//'relu'
		public Keyword getRELUReluKeyword_2_0() { return cRELUReluKeyword_2_0; }
	}
	public class UpdaterTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.UpdaterType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSGDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSGDSgdKeyword_0_0 = (Keyword)cSGDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cADAMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cADAMAdamKeyword_1_0 = (Keyword)cADAMEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cADADELTAEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cADADELTAAdadeltaKeyword_2_0 = (Keyword)cADADELTAEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cNESTEROVSEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cNESTEROVSNestrovsKeyword_3_0 = (Keyword)cNESTEROVSEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cADAGRADEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cADAGRADAdagradKeyword_4_0 = (Keyword)cADAGRADEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cRMSPROPEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cRMSPROPRmspropKeyword_5_0 = (Keyword)cRMSPROPEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum UpdaterType:
		//	SGD='sgd' | ADAM='adam' | ADADELTA='adadelta' | NESTEROVS='nestrovs' | ADAGRAD='adagrad' | RMSPROP='rmsprop';
		public EnumRule getRule() { return rule; }
		
		//SGD='sgd' | ADAM='adam' | ADADELTA='adadelta' | NESTEROVS='nestrovs' | ADAGRAD='adagrad' | RMSPROP='rmsprop'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SGD='sgd'
		public EnumLiteralDeclaration getSGDEnumLiteralDeclaration_0() { return cSGDEnumLiteralDeclaration_0; }
		
		//'sgd'
		public Keyword getSGDSgdKeyword_0_0() { return cSGDSgdKeyword_0_0; }
		
		//ADAM='adam'
		public EnumLiteralDeclaration getADAMEnumLiteralDeclaration_1() { return cADAMEnumLiteralDeclaration_1; }
		
		//'adam'
		public Keyword getADAMAdamKeyword_1_0() { return cADAMAdamKeyword_1_0; }
		
		//ADADELTA='adadelta'
		public EnumLiteralDeclaration getADADELTAEnumLiteralDeclaration_2() { return cADADELTAEnumLiteralDeclaration_2; }
		
		//'adadelta'
		public Keyword getADADELTAAdadeltaKeyword_2_0() { return cADADELTAAdadeltaKeyword_2_0; }
		
		//NESTEROVS='nestrovs'
		public EnumLiteralDeclaration getNESTEROVSEnumLiteralDeclaration_3() { return cNESTEROVSEnumLiteralDeclaration_3; }
		
		//'nestrovs'
		public Keyword getNESTEROVSNestrovsKeyword_3_0() { return cNESTEROVSNestrovsKeyword_3_0; }
		
		//ADAGRAD='adagrad'
		public EnumLiteralDeclaration getADAGRADEnumLiteralDeclaration_4() { return cADAGRADEnumLiteralDeclaration_4; }
		
		//'adagrad'
		public Keyword getADAGRADAdagradKeyword_4_0() { return cADAGRADAdagradKeyword_4_0; }
		
		//RMSPROP='rmsprop'
		public EnumLiteralDeclaration getRMSPROPEnumLiteralDeclaration_5() { return cRMSPROPEnumLiteralDeclaration_5; }
		
		//'rmsprop'
		public Keyword getRMSPROPRmspropKeyword_5_0() { return cRMSPROPRmspropKeyword_5_0; }
	}
	public class WeightInitTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.WeightInitType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cZEROEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cZEROZeroKeyword_0_0 = (Keyword)cZEROEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cUNIFORMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cUNIFORMUniformKeyword_1_0 = (Keyword)cUNIFORMEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNORMALIZEDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNORMALIZEDNormalizedKeyword_2_0 = (Keyword)cNORMALIZEDEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum WeightInitType:
		//	ZERO='zero' | UNIFORM='uniform' | NORMALIZED='normalized';
		public EnumRule getRule() { return rule; }
		
		//ZERO='zero' | UNIFORM='uniform' | NORMALIZED='normalized'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ZERO='zero'
		public EnumLiteralDeclaration getZEROEnumLiteralDeclaration_0() { return cZEROEnumLiteralDeclaration_0; }
		
		//'zero'
		public Keyword getZEROZeroKeyword_0_0() { return cZEROZeroKeyword_0_0; }
		
		//UNIFORM='uniform'
		public EnumLiteralDeclaration getUNIFORMEnumLiteralDeclaration_1() { return cUNIFORMEnumLiteralDeclaration_1; }
		
		//'uniform'
		public Keyword getUNIFORMUniformKeyword_1_0() { return cUNIFORMUniformKeyword_1_0; }
		
		//NORMALIZED='normalized'
		public EnumLiteralDeclaration getNORMALIZEDEnumLiteralDeclaration_2() { return cNORMALIZEDEnumLiteralDeclaration_2; }
		
		//'normalized'
		public Keyword getNORMALIZEDNormalizedKeyword_2_0() { return cNORMALIZEDNormalizedKeyword_2_0; }
	}
	
	private final ModelElements pModel;
	private final NetworkElements pNetwork;
	private final LayerElements pLayer;
	private final LayerDeclarationElements pLayerDeclaration;
	private final LayerTupleElements pLayerTuple;
	private final LayerRefElements pLayerRef;
	private final LayerTypeElements eLayerType;
	private final ActivationFunctionTypeElements eActivationFunctionType;
	private final UpdaterTypeElements eUpdaterType;
	private final WeightInitTypeElements eWeightInitType;
	private final VariableAssignmentElements pVariableAssignment;
	private final FunctionElements pFunction;
	private final DeclaredParameterElements pDeclaredParameter;
	private final ExpressionElements pExpression;
	private final TermElements pTerm;
	private final FactorElements pFactor;
	private final TerminalRule tEXT_INT;
	private final TerminalRule tINTEGER;
	private final TerminalRule tZINTEGER;
	private final TerminalRule tREAL;
	private final TerminalRule tASSIGN;
	private final TerminalRule tREFERENCE;
	private final TerminalRule tML_COMMENT;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pNetwork = new NetworkElements();
		this.pLayer = new LayerElements();
		this.pLayerDeclaration = new LayerDeclarationElements();
		this.pLayerTuple = new LayerTupleElements();
		this.pLayerRef = new LayerRefElements();
		this.eLayerType = new LayerTypeElements();
		this.eActivationFunctionType = new ActivationFunctionTypeElements();
		this.eUpdaterType = new UpdaterTypeElements();
		this.eWeightInitType = new WeightInitTypeElements();
		this.pVariableAssignment = new VariableAssignmentElements();
		this.pFunction = new FunctionElements();
		this.pDeclaredParameter = new DeclaredParameterElements();
		this.pExpression = new ExpressionElements();
		this.pTerm = new TermElements();
		this.pFactor = new FactorElements();
		this.tEXT_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EXT_INT");
		this.tINTEGER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.INTEGER");
		this.tZINTEGER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ZINTEGER");
		this.tREAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.REAL");
		this.tASSIGN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ASSIGN");
		this.tREFERENCE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.REFERENCE");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ML_COMMENT");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	network=Network;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Network:
	//	'network' name=ID '{' &
	//	'epochs' ASSIGN epochs=INTEGER & ('seed' ASSIGN seed=ZINTEGER)? &
	//	'updater' REFERENCE updaterType=UpdaterType &
	//	'learningRate' ASSIGN learningRate=VariableAssignment
	//	layers+=Layer*
	//	'}';
	public NetworkElements getNetworkAccess() {
		return pNetwork;
	}
	
	public ParserRule getNetworkRule() {
		return getNetworkAccess().getRule();
	}
	
	//Layer:
	//	'layer' layerDecl=LayerDeclaration '{'
	//	'type' REFERENCE layerType=LayerType ('activation' REFERENCE activType=ActivationFunctionType)? & ('weightsInit'
	//	REFERENCE weightInit=WeightInitType)? & ('biasInit' ASSIGN biasInit=REAL)?
	//	'}';
	public LayerElements getLayerAccess() {
		return pLayer;
	}
	
	public ParserRule getLayerRule() {
		return getLayerAccess().getRule();
	}
	
	//LayerDeclaration:
	//	layerTuple+=LayerTuple |
	//	'[' layerTuple+=LayerTuple (',' layerTuple+=LayerTuple)* ']' |
	//	'{' layerMultiplier=INTEGER '}' '[' layerTuple+=LayerTuple ']';
	public LayerDeclarationElements getLayerDeclarationAccess() {
		return pLayerDeclaration;
	}
	
	public ParserRule getLayerDeclarationRule() {
		return getLayerDeclarationAccess().getRule();
	}
	
	//LayerTuple:
	//	'(' ('ref' ':' ref=ID)? ('in' ':' in=LayerRef)? 'out' ':' out=LayerRef ')' |
	//	'(' in=LayerRef? ':' out=LayerRef ')' |
	//	':' out=LayerRef;
	public LayerTupleElements getLayerTupleAccess() {
		return pLayerTuple;
	}
	
	public ParserRule getLayerTupleRule() {
		return getLayerTupleAccess().getRule();
	}
	
	//LayerRef:
	//	value=INTEGER | '<' ref=ID '>';
	public LayerRefElements getLayerRefAccess() {
		return pLayerRef;
	}
	
	public ParserRule getLayerRefRule() {
		return getLayerRefAccess().getRule();
	}
	
	//enum LayerType:
	//	CONVOLUTIONAL='conv' | MAXPOOL='max-pool' | AVGPOOL='avg-pool' | DENSE='dense' | SOFTMAX='softmax';
	public LayerTypeElements getLayerTypeAccess() {
		return eLayerType;
	}
	
	public EnumRule getLayerTypeRule() {
		return getLayerTypeAccess().getRule();
	}
	
	//enum ActivationFunctionType:
	//	SIGMOID='sigmoid' | TANH='tanh' | RELU='relu';
	public ActivationFunctionTypeElements getActivationFunctionTypeAccess() {
		return eActivationFunctionType;
	}
	
	public EnumRule getActivationFunctionTypeRule() {
		return getActivationFunctionTypeAccess().getRule();
	}
	
	//enum UpdaterType:
	//	SGD='sgd' | ADAM='adam' | ADADELTA='adadelta' | NESTEROVS='nestrovs' | ADAGRAD='adagrad' | RMSPROP='rmsprop';
	public UpdaterTypeElements getUpdaterTypeAccess() {
		return eUpdaterType;
	}
	
	public EnumRule getUpdaterTypeRule() {
		return getUpdaterTypeAccess().getRule();
	}
	
	//enum WeightInitType:
	//	ZERO='zero' | UNIFORM='uniform' | NORMALIZED='normalized';
	public WeightInitTypeElements getWeightInitTypeAccess() {
		return eWeightInitType;
	}
	
	public EnumRule getWeightInitTypeRule() {
		return getWeightInitTypeAccess().getRule();
	}
	
	//VariableAssignment:
	//	value=INTEGER | Expression | Function;
	public VariableAssignmentElements getVariableAssignmentAccess() {
		return pVariableAssignment;
	}
	
	public ParserRule getVariableAssignmentRule() {
		return getVariableAssignmentAccess().getRule();
	}
	
	//Function:
	//	name=ID ('(' args+=DeclaredParameter (',' args+=DeclaredParameter)* ')')? ASSIGN expr=Expression;
	public FunctionElements getFunctionAccess() {
		return pFunction;
	}
	
	public ParserRule getFunctionRule() {
		return getFunctionAccess().getRule();
	}
	
	//DeclaredParameter:
	//	name=ID;
	public DeclaredParameterElements getDeclaredParameterAccess() {
		return pDeclaredParameter;
	}
	
	public ParserRule getDeclaredParameterRule() {
		return getDeclaredParameterAccess().getRule();
	}
	
	//Expression:
	//	Term (({Plus.left=current} '+' | {Minus.left=current} '-') right=Term)*;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//Term:
	//	Factor (({Multiply.left=current} '*' | {Division.left=current} '/') right=Factor)*;
	public TermElements getTermAccess() {
		return pTerm;
	}
	
	public ParserRule getTermRule() {
		return getTermAccess().getRule();
	}
	
	//Factor:
	//	number=REAL | variable=ID | '(' expression=Expression ')';
	public FactorElements getFactorAccess() {
		return pFactor;
	}
	
	public ParserRule getFactorRule() {
		return getFactorAccess().getRule();
	}
	
	//terminal EXT_INT:
	//	INT ('e' | 'E') ('-' | '+') INTEGER;
	public TerminalRule getEXT_INTRule() {
		return tEXT_INT;
	}
	
	//terminal INTEGER:
	//	'1'..'9' INT*;
	public TerminalRule getINTEGERRule() {
		return tINTEGER;
	}
	
	//terminal ZINTEGER:
	//	INT;
	public TerminalRule getZINTEGERRule() {
		return tZINTEGER;
	}
	
	//terminal REAL:
	//	INTEGER | INT '.' (EXT_INT | INT) INT*;
	public TerminalRule getREALRule() {
		return tREAL;
	}
	
	//terminal ASSIGN:
	//	'=';
	public TerminalRule getASSIGNRule() {
		return tASSIGN;
	}
	
	//terminal REFERENCE:
	//	'->';
	public TerminalRule getREFERENCERule() {
		return tREFERENCE;
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
