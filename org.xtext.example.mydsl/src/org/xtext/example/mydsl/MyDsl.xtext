grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.xtext.org/example/mydsl/MyDsl"

Model:
	network=Network;

Network:
	'network' name=STRING '{' &
	'epochs' ASSIGN epochs=INTEGER &
	'image-size' ASSIGN imgSize=INTEGER &
	'image-channels' ASSIGN imgChannels=INTEGER &
	'batch-size' ASSIGN batchSize=INTEGER &
	'output-labels' ASSIGN outputLabels=INTEGER &
	('train-data-path' ASSIGN trainPath=STRING)? &
	('val-data-path' ASSIGN valPath=STRING)? &
	'caffe-path' ASSIGN caffePath=STRING &
	'output-path' ASSIGN outputPath=STRING &
	('seed' ASSIGN seed=ZINTEGER)? &
	'updater' REFERENCE updaterType=UpdaterType &
	'learningRate' ASSIGN learningRate=REAL
	layers+=Layer*
	'}'
;

Layer:
	type='conv' layerDecl=LayerDeclaration '{' convLayerBody=ConvLayerBody layerBody=LayerBody '}'
	| type='pool' layerDecl=LayerTuple '{' poolLayerBody=PoolLayerBody layerBody=LayerBody '}'
	| type='dense' layerDecl=LayerDeclaration ('{' layerBody=LayerBody '}')?
	| type='branch' name=STRING '{' branchBody=BranchBody branchLayers+=(Layer)* '}'
;

BranchBody:
	'in' ':' in=STRING &
	'out' ':' out=STRING &
	(SEPARATOR)*
;

LayerBody:
	(layerParams+='activation' REFERENCE activType=ActivationFunctionType)? &
	(layerParams+='weightsInit' REFERENCE weightInit=WeightInitType)? &
	(layerParams+='biasInit' REFERENCE biasInit=WeightInitType)? &
	(SEPARATOR)*
;

ConvLayerBody:
	'kernel-size' ASSIGN kernelSize=INTEGER &
	'stride' ASSIGN stride=INTEGER &
	(SEPARATOR)*
;

PoolLayerBody:
	'type' REFERENCE poolingType=PoolingType &
	'stride' ASSIGN stride=INTEGER &
	(SEPARATOR)*
;

LayerDeclaration:
	layerTuple+=LayerTuple
	| '[' layerTuple+=LayerTuple (SEPARATOR layerTuple+=LayerTuple)* ']'
;

LayerTuple:
	'(' layerName=LayerName (in=InParam)? out=OutParam ')'
;

LayerName:
	'name' ':' name=(STRING | 'final-layer')
;

InParam:
	'in' ':' name=(STRING | 'data')
;

OutParam:
	'out' ':' value=(INTEGER | 'labels')
;

enum PoolingType:
	MAX_POOLING='MAX' | AVERAGE_POOLING='AVG'
;

enum ActivationFunctionType:
	SIGMOID='Sigmoid' | TANH='TanH' | RELU='ReLU'
;

enum UpdaterType:
	SGD='sgd' | ADAM='adam' | ADADELTA='adadelta' | NESTEROVS='nestrovs' | ADAGRAD='adagrad' | RMSPROP='rmsprop'
;

enum WeightInitType:
	CONSTANT='constant' | GAUSSIAN='gaussian' | XAVIER='xavier'
;

terminal EXT_INT:
	INT ('e' | 'E')('-' | '+') INTEGER
;

terminal INTEGER:
	('1'..'9')(INT)*
;

terminal ZINTEGER:
	INT
;

terminal REAL:
	INTEGER | INT '.' (EXT_INT | INT) (INT)*
;

terminal ASSIGN:
	'='
;

terminal SEPARATOR:
	','
;

terminal REFERENCE:
	'->'
;

terminal ML_COMMENT:
	'/*' -> '*/'
;
